<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Find Matches - MatchUp</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  
  <!-- Leaflet CSS -->
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"/>
  
  <style>
    #map {
      height: 400px;
      border-radius: 10px;
      margin: 20px 0;
    }
  </style>
</head>
<body>
  <div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
      <h2>Available Matches</h2>
      <button class="btn btn-outline-secondary" onclick="window.location.href='/'">Return</button>
    </div>

    <!-- MAP -->
    <div>
      <h4>Match Locations</h4>
      <div id="map"></div>
    </div>

    <% if (matches.length === 0) { %>
      <p>No matches available yet.</p>
    <% } %>

    <% matches.forEach(match => { %>
      <div class="card mb-3 shadow-sm">
        <div class="card-body">
          <h5 class="card-title"><%= match.location %> — <%= new Date(match.date).toLocaleString() %></h5>
          <p class="card-text">Created by: <strong><%= match.creator.username %></strong></p>
          <p class="card-text">Players (<%= match.players.length %>/<%= match.maxPlayers %>):</p>

          <div class="accordion mb-3" id="accordionPlayers-<%= match._id %>">
            <div class="accordion-item">
              <h2 class="accordion-header" id="heading-<%= match._id %>">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-<%= match._id %>" aria-expanded="false" aria-controls="collapse-<%= match._id %>">
                  Show players (<%= match.players.length %>)
                </button>
              </h2>
              <div id="collapse-<%= match._id %>" class="accordion-collapse collapse" aria-labelledby="heading-<%= match._id %>" data-bs-parent="#accordionPlayers-<%= match._id %>">
                <div class="accordion-body">
                  <ul class="list-group">
                    <% match.players.forEach(player => { %>
                      <li class="list-group-item d-flex justify-content-between align-items-center">
                        <a href="/profile/<%= player._id %>"><%= player.username %></a>
                        <% if (player._id.toString() === match.creator._id.toString()) { %>
                          <span class="badge bg-primary rounded-pill">Creator</span>
                        <% } %>
                      </li>
                    <% }) %>
                  </ul>
                </div>
              </div>
            </div>
          </div>

          <p class="card-text"><%= match.notes || 'No additional notes.' %></p>
        </div>
        <div class="card-footer">
          <% const userHasJoined = match.players.some(player => player._id.toString() === user._id.toString()); %>
          <% if (!userHasJoined) { %>
            <button class="btn btn-success my-3" onclick="window.location.href='/join-match/<%= match._id %>'">Join Match</button>
          <% } else { %>
            <p class="text-success fw-bold my-3">You have already joined this match.</p>
          <% } %>
        </div>
      </div>
    <% }) %>
  </div>

  <!-- Bootstrap Bundle -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

  <!-- Leaflet JS -->
  <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

  <!-- Leaflet Map + Geocoding -->
  <script>
    const matches = <%- JSON.stringify(matches) %>;
    

    const map = L.map('map').setView([48.8566, 2.3522], 12); // Centré sur Paris

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '© OpenStreetMap contributors'
    }).addTo(map);

    async function geocode(address) {
      const res = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`);
      const data = await res.json();
      if (data.length > 0) {
        return { lat: data[0].lat, lon: data[0].lon };
      }
      return null;
    }

    async function addMarkers() {
      matches.forEach(match => {
        if (match.location) {
          geocode(match.location).then(coords => {
            if (coords) {
              L.marker([coords.lat, coords.lon])
                .addTo(map)
                .bindPopup(`<strong>${match.location}</strong><br>${new Date(match.date).toLocaleString()}`);
            }
          });
        }
      });
    }

    addMarkers();
  </script>
</body>
</html>
